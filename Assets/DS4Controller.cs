//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/DS4Controller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DS4Controller : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DS4Controller()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DS4Controller"",
    ""maps"": [
        {
            ""name"": ""Rubiks"",
            ""id"": ""14ba0126-6ce3-499e-8974-7272d0eb9c2c"",
            ""actions"": [
                {
                    ""name"": ""Ui"",
                    ""type"": ""Button"",
                    ""id"": ""c18b792a-bcd5-4b8d-8df9-8f5a32bef658"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""U"",
                    ""type"": ""Button"",
                    ""id"": ""f67aa053-fd87-46ba-a5ae-46c9a297ac64"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Di"",
                    ""type"": ""Button"",
                    ""id"": ""3c175284-2368-4c4d-b027-615872d5ea59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D"",
                    ""type"": ""Button"",
                    ""id"": ""1658c939-c2e6-4fe5-91b5-bfbac9a6567d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""F"",
                    ""type"": ""Button"",
                    ""id"": ""cac4731e-9110-4eeb-a15c-41b59af8711f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""L"",
                    ""type"": ""Button"",
                    ""id"": ""6d88a12a-e098-4042-8b14-80e1ff50d561"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fi"",
                    ""type"": ""Button"",
                    ""id"": ""2bfc4652-f737-40a3-ba64-dda3c9439d3b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Li"",
                    ""type"": ""Button"",
                    ""id"": ""d303c1f6-2fdd-4cfb-9979-108d0e731e7d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""R"",
                    ""type"": ""Button"",
                    ""id"": ""a067306d-bb7f-4166-858e-28c28f5d476b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ri"",
                    ""type"": ""Button"",
                    ""id"": ""8c52b848-5e63-4134-aafd-14bd4753b970"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""83385376-0d3c-466f-90ee-b2101b28ad45"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ui"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d993dcce-c11b-4eed-af8a-362e5ea41814"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""U"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2ed25ae-8cc3-41f0-8997-994b11c24a49"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Di"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b17b08fb-5d35-4a18-841c-b994f600319b"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6034fb84-c179-4d5e-83d2-8111220fa622"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""F"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58924938-c92f-437a-afbe-934b289ce259"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""L"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23f4d7f5-5024-418a-bf03-47de4968b4a4"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fi"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6cdbea76-a483-4332-9e83-48f6c9f64c28"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Li"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0dd13a4-c384-49d3-8f1d-cce7ebd7f591"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""R"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da34b9b6-4847-4c2e-9ca2-db7a4f0952dc"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ri"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Rubiks
        m_Rubiks = asset.FindActionMap("Rubiks", throwIfNotFound: true);
        m_Rubiks_Ui = m_Rubiks.FindAction("Ui", throwIfNotFound: true);
        m_Rubiks_U = m_Rubiks.FindAction("U", throwIfNotFound: true);
        m_Rubiks_Di = m_Rubiks.FindAction("Di", throwIfNotFound: true);
        m_Rubiks_D = m_Rubiks.FindAction("D", throwIfNotFound: true);
        m_Rubiks_F = m_Rubiks.FindAction("F", throwIfNotFound: true);
        m_Rubiks_L = m_Rubiks.FindAction("L", throwIfNotFound: true);
        m_Rubiks_Fi = m_Rubiks.FindAction("Fi", throwIfNotFound: true);
        m_Rubiks_Li = m_Rubiks.FindAction("Li", throwIfNotFound: true);
        m_Rubiks_R = m_Rubiks.FindAction("R", throwIfNotFound: true);
        m_Rubiks_Ri = m_Rubiks.FindAction("Ri", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Rubiks
    private readonly InputActionMap m_Rubiks;
    private IRubiksActions m_RubiksActionsCallbackInterface;
    private readonly InputAction m_Rubiks_Ui;
    private readonly InputAction m_Rubiks_U;
    private readonly InputAction m_Rubiks_Di;
    private readonly InputAction m_Rubiks_D;
    private readonly InputAction m_Rubiks_F;
    private readonly InputAction m_Rubiks_L;
    private readonly InputAction m_Rubiks_Fi;
    private readonly InputAction m_Rubiks_Li;
    private readonly InputAction m_Rubiks_R;
    private readonly InputAction m_Rubiks_Ri;
    public struct RubiksActions
    {
        private @DS4Controller m_Wrapper;
        public RubiksActions(@DS4Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @Ui => m_Wrapper.m_Rubiks_Ui;
        public InputAction @U => m_Wrapper.m_Rubiks_U;
        public InputAction @Di => m_Wrapper.m_Rubiks_Di;
        public InputAction @D => m_Wrapper.m_Rubiks_D;
        public InputAction @F => m_Wrapper.m_Rubiks_F;
        public InputAction @L => m_Wrapper.m_Rubiks_L;
        public InputAction @Fi => m_Wrapper.m_Rubiks_Fi;
        public InputAction @Li => m_Wrapper.m_Rubiks_Li;
        public InputAction @R => m_Wrapper.m_Rubiks_R;
        public InputAction @Ri => m_Wrapper.m_Rubiks_Ri;
        public InputActionMap Get() { return m_Wrapper.m_Rubiks; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RubiksActions set) { return set.Get(); }
        public void SetCallbacks(IRubiksActions instance)
        {
            if (m_Wrapper.m_RubiksActionsCallbackInterface != null)
            {
                @Ui.started -= m_Wrapper.m_RubiksActionsCallbackInterface.OnUi;
                @Ui.performed -= m_Wrapper.m_RubiksActionsCallbackInterface.OnUi;
                @Ui.canceled -= m_Wrapper.m_RubiksActionsCallbackInterface.OnUi;
                @U.started -= m_Wrapper.m_RubiksActionsCallbackInterface.OnU;
                @U.performed -= m_Wrapper.m_RubiksActionsCallbackInterface.OnU;
                @U.canceled -= m_Wrapper.m_RubiksActionsCallbackInterface.OnU;
                @Di.started -= m_Wrapper.m_RubiksActionsCallbackInterface.OnDi;
                @Di.performed -= m_Wrapper.m_RubiksActionsCallbackInterface.OnDi;
                @Di.canceled -= m_Wrapper.m_RubiksActionsCallbackInterface.OnDi;
                @D.started -= m_Wrapper.m_RubiksActionsCallbackInterface.OnD;
                @D.performed -= m_Wrapper.m_RubiksActionsCallbackInterface.OnD;
                @D.canceled -= m_Wrapper.m_RubiksActionsCallbackInterface.OnD;
                @F.started -= m_Wrapper.m_RubiksActionsCallbackInterface.OnF;
                @F.performed -= m_Wrapper.m_RubiksActionsCallbackInterface.OnF;
                @F.canceled -= m_Wrapper.m_RubiksActionsCallbackInterface.OnF;
                @L.started -= m_Wrapper.m_RubiksActionsCallbackInterface.OnL;
                @L.performed -= m_Wrapper.m_RubiksActionsCallbackInterface.OnL;
                @L.canceled -= m_Wrapper.m_RubiksActionsCallbackInterface.OnL;
                @Fi.started -= m_Wrapper.m_RubiksActionsCallbackInterface.OnFi;
                @Fi.performed -= m_Wrapper.m_RubiksActionsCallbackInterface.OnFi;
                @Fi.canceled -= m_Wrapper.m_RubiksActionsCallbackInterface.OnFi;
                @Li.started -= m_Wrapper.m_RubiksActionsCallbackInterface.OnLi;
                @Li.performed -= m_Wrapper.m_RubiksActionsCallbackInterface.OnLi;
                @Li.canceled -= m_Wrapper.m_RubiksActionsCallbackInterface.OnLi;
                @R.started -= m_Wrapper.m_RubiksActionsCallbackInterface.OnR;
                @R.performed -= m_Wrapper.m_RubiksActionsCallbackInterface.OnR;
                @R.canceled -= m_Wrapper.m_RubiksActionsCallbackInterface.OnR;
                @Ri.started -= m_Wrapper.m_RubiksActionsCallbackInterface.OnRi;
                @Ri.performed -= m_Wrapper.m_RubiksActionsCallbackInterface.OnRi;
                @Ri.canceled -= m_Wrapper.m_RubiksActionsCallbackInterface.OnRi;
            }
            m_Wrapper.m_RubiksActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Ui.started += instance.OnUi;
                @Ui.performed += instance.OnUi;
                @Ui.canceled += instance.OnUi;
                @U.started += instance.OnU;
                @U.performed += instance.OnU;
                @U.canceled += instance.OnU;
                @Di.started += instance.OnDi;
                @Di.performed += instance.OnDi;
                @Di.canceled += instance.OnDi;
                @D.started += instance.OnD;
                @D.performed += instance.OnD;
                @D.canceled += instance.OnD;
                @F.started += instance.OnF;
                @F.performed += instance.OnF;
                @F.canceled += instance.OnF;
                @L.started += instance.OnL;
                @L.performed += instance.OnL;
                @L.canceled += instance.OnL;
                @Fi.started += instance.OnFi;
                @Fi.performed += instance.OnFi;
                @Fi.canceled += instance.OnFi;
                @Li.started += instance.OnLi;
                @Li.performed += instance.OnLi;
                @Li.canceled += instance.OnLi;
                @R.started += instance.OnR;
                @R.performed += instance.OnR;
                @R.canceled += instance.OnR;
                @Ri.started += instance.OnRi;
                @Ri.performed += instance.OnRi;
                @Ri.canceled += instance.OnRi;
            }
        }
    }
    public RubiksActions @Rubiks => new RubiksActions(this);
    public interface IRubiksActions
    {
        void OnUi(InputAction.CallbackContext context);
        void OnU(InputAction.CallbackContext context);
        void OnDi(InputAction.CallbackContext context);
        void OnD(InputAction.CallbackContext context);
        void OnF(InputAction.CallbackContext context);
        void OnL(InputAction.CallbackContext context);
        void OnFi(InputAction.CallbackContext context);
        void OnLi(InputAction.CallbackContext context);
        void OnR(InputAction.CallbackContext context);
        void OnRi(InputAction.CallbackContext context);
    }
}
